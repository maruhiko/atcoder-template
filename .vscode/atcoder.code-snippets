{
  "print_joined": {
    "prefix": ["print_joined"],
    "description": "Print vector elements separated by spaces using a plain for-loop",
    "body": [
      "template<typename T> void print_joined(vector<T> vec){",
      "    ll n = vec.size();",
      "    if(n<=0) return;",
      "",
      "    cout << vec[0];",
      "    for (ll i = 1; i < n; ++i) cout << ' ' << vec[i];",
      "    cout << endl;",
      "    return;",
      "}"
    ]
  },
  "modint": {
    "prefix": "modint",
    "description": "Modint struct and helpers",
    "body": [
      "struct mint {",
      "    ll n;",
      "    mint(ll a = 0) {n = a % mod;}",
      "    mint& operator+=(mint a) {n += a.n; n %= mod; return *this;}",
      "    mint& operator-=(mint a) {n += mod; n -= a.n; n %= mod; return *this;}",
      "    mint& operator*=(mint a) {n *= a.n; n %= mod; return *this;}",
      "    mint& operator%=(mint a) {n %= a.n; return *this;}",
      "    mint& operator++() {n++;n %= mod; return *this;}",
      "    mint& operator--() {n += mod; n--; n %= mod; return *this;}",
      "};",
      "mint operator+(mint a, mint b) {a += b; return a;}",
      "mint operator-(mint a, mint b) {a -= b; return a;}",
      "mint operator*(mint a, mint b) {a *= b; return a;}",
      "",
      "mint factMod(ll n) {",
      "    if (n == 0)",
      "    {",
      "        return 1;",
      "    }",
      "    mint ans = 1;",
      "    while (n > 1) {",
      "        ans *= n;",
      "        n--;",
      "    }",
      "    return ans;",
      "}",
      "",
      "mint powMod(mint x, ll y) {",
      "    if (x.n <= 1)",
      "    {",
      "        return x;",
      "    }",
      "    if (y == 0)",
      "    {",
      "        return 1;",
      "    }",
      "    else if (y == 1)",
      "    {",
      "        return x;",
      "    }",
      "    else if (y % 2 == 0)",
      "    {",
      "        mint tmp = powMod(x, y / 2);",
      "        return tmp * tmp;",
      "    }",
      "    else",
      "    {",
      "        mint tmp = powMod(x, y / 2);",
      "        return tmp * tmp * x;",
      "    }",
      "}",
      "",
      "// modは素数",
      "mint modinv(mint n)",
      "{",
      "    return powMod(n, mod - 2);",
      "}",
      "",
      "// modは素数でなくてもいい",
      "long long modinv(long long a, long long m = mod) {",
      "    long long b = m, u = 1, v = 0;",
      "    while(b){",
      "        long long t = a / b;",
      "        a -= t * b; swap(a,b);",
      "        u -= t * v; swap(u,v);",
      "    }",
      "    u %= m;",
      "    if (u < 0) u += m;",
      "    return u;",
      "}",
      "",
      "vector<ll> invtbl;",
      "void preCalcInv(ll up)",
      "{",
      "    invtbl.resize(up + 1);",
      "    invtbl[1] = 1;",
      "    for(ll a=2; a<=up; a++)",
      "    {",
      "        invtbl[a] = mod - invtbl[mod % a] * (mod / a) % mod;",
      "    }",
      "}",
      "",
      "mint operator/(mint a, mint b)",
      "{",
      "    if (b.n < invtbl.size())",
      "    {",
      "        a *= invtbl[b.n];",
      "    }",
      "    else",
      "    {",
      "        a *= modinv(b);",
      "    }",
      "    return a;",
      "}",
      "mint& operator/=(mint& a, mint b)",
      "{",
      "    a = a / b;",
      "    return a;",
      "}",
      "",
      "",
      "mint nCrMod(ll n, ll r)",
      "{",
      "    if (n < r || n < 0 || r < 0)",
      "    {",
      "        return 0;",
      "    }",
      "    r = min(r, n - r);",
      "    mint a = 1;",
      "    for(ll i= n-r+1; i<=n; i++)",
      "    {",
      "        a *= i;",
      "    }",
      "",
      "    a /= factMod(r);",
      "    return a;",
      "}",
      "",
      "mint nHrMod(ll n, ll r)",
      "{",
      "    return nCrMod(n + r - 1, r);",
      "}",
      "",
      "template<class T>",
      "constexpr auto modK_belowN(T k, T MOD, T n)",
      "{",
      "    return (n + MOD - k - 1) / MOD;",
      "}"
    ]
  }
}
